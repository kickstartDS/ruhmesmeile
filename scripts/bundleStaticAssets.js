const fs = require("node:fs/promises");
const esbuild = require("esbuild");
const fg = require("fast-glob");

const importPath = (filePath) => `import "./${filePath}";`;

const componentFiles = fg.sync([
  "node_modules/@kickstartds/ds-agency-premium/dist/global.client.js",
  "node_modules/@kickstartds/ds-agency-premium/dist/components/**/*.client.js",
  "node_modules/@kickstartds/content/lib/slider/lazySlider.js",
  "components/**/*.client.js",
]);
const entryFile = `\
${componentFiles.map(importPath).join("\n")}
`;

const build = async () => {
  await fs.rm("public/_", { force: true, recursive: true });
  await fs.mkdir("public/_", { recursive: true });

  const result = await esbuild.build({
    stdin: {
      contents: entryFile,
      resolveDir: ".",
      loader: "ts",
    },
    format: "esm",
    bundle: true,
    minify: true,
    splitting: true,
    treeShaking: true,
    outdir: "public/_",
    entryNames: "[dir]/client",
    logLevel: "info",
    plugins: [],
    loader: {
      ".scss": "empty",
      ".css": "empty",
    },
    write: false,
  });

  for (const outputFile of result.outputFiles) {
    await fs.writeFile(outputFile.path, outputFile.contents);
  }

  await fs.writeFile(
    "components/bundle-hash.ts",
    `
/* This file is auto-generated by scripts/bundleStaticAssets.js, do not modify manually */

const bundleHash = "${
      result.outputFiles.find((outputFile) =>
        outputFile.path.endsWith("/client.js")
      ).hash
    }";
export default bundleHash;
  `
  );
};

build();
